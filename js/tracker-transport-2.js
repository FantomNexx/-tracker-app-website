var Transport = {      REQUESTS: {        LOGIN               : "LOGIN",    GET_LAST_POINT      : "GET_LAST_POINT",    GET_SESSIONS        : "GET_SESSIONS",    GET_SESSION_POINTS  : "GET_SESSION_POINTS",    GET_POINTS_100      : "GET_POINTS_100",    GET_POINTS_LAST     : "GET_POINTS_LAST",    GET_POINTS_BY_PERIOD: "GET_POINTS_BY_PERIOD"  },      REPLIES: {        SUCCESS: "SUCCESS",        REPLY_INVALID     : "REPLY_INVALID",    REPLY_PARSE_FAILED: "REPLY_PARSE_FAILED",    REPLY_DATA_INVALID: "REPLY_DATA_INVALID",        FAIL                : "FAIL",    FAIL_DATA           : "FAIL_DATA",    IDENTITY_NFOUND     : "IDENTITY_NFOUND",    HOST_NFOUND         : "HOST_NFOUND",    LAST_POINT_NFOUND   : "LAST_POINT_NFOUND",    USER_EMAIL_NFOUND   : "USER_EMAIL_NFOUND",    USER_PASSWORD_NMATCH: "USER_PASSWORD_NMATCH"  }  };//Transport//--------------------------------------------------------------------Transport.Request            =  function( request_data, event_on_success, event_on_fail ){        var ajax_request = $.ajax( {      url     : "tracker-server.php",      method  : "POST",      data    : request_data,      dataType: "html"    } );            if( ajax_request['done'] != undefined ){            ajax_request['done'](        function( reply ){                    Transport.OnRequestDone(            reply, event_on_success, event_on_fail );        } );          }//if done method exists            if( ajax_request['fail'] != undefined ){            ajax_request['fail'](        function( jqXHR, status ){                    Transport.OnRequestFail(            jqXHR, status, event_on_fail );        } );          }//if fail method exists      };//--------------------------------------------------------------------Transport.OnRequestDone      =  function( reply, event_on_success, event_on_fail ){    if( reply == undefined ){      Transport.OnReplyInvalid( event_on_fail );      return;    }//if        var obj_reply;    try{      obj_reply = JSON.parse( reply );    }catch( e ){      Transport.OnReplyParseFailed( event_on_fail );      return;    }//try            if( obj_reply["reply"] == undefined ){      Transport.OnReplyDataInvalid( event_on_fail );      return;    }//if            if( obj_reply["reply"] == Transport.REPLIES.SUCCESS ){      event_helper.Trigger( event_on_success, obj_reply );    }else{      Transport.OnReplyFailed(        obj_reply["reply"], obj_reply["descr"]      );    }//else if reply failed      };//--------------------------------------------------------------------Transport.OnRequestFail      = function( jqXHR, status ){  console.log( "Request failed: " + status );};//--------------------------------------------------------------------Transport.OnReplyInvalid     = function( event_on_fail ){    var reply_failed_obj = Transport.GetFailedReply(    Transport.REPLIES.REPLY_INVALID,    "Returned reply is invalid"  );    event_helper.Trigger(    event_on_fail, reply_failed_obj );    console.log( "Returned reply is invalid" );};//--------------------------------------------------------------------Transport.OnReplyParseFailed = function( event_on_fail ){    var reply_failed_obj = Transport.GetFailedReply(    Transport.REPLIES.REPLY_PARSE_FAILED,    "Reply parse failed"  );    event_helper.Trigger(    event_on_fail, reply_failed_obj );    console.log( "Reply parse failed" );};//--------------------------------------------------------------------Transport.OnReplyDataInvalid = function( event_on_fail ){    var reply_failed_obj = Transport.GetFailedReply(    Transport.REPLIES.REPLY_DATA_INVALID,    "Reply data invalid"  );    event_helper.Trigger(    event_on_fail, reply_failed_obj );    console.log( "Reply data invalid" );};//--------------------------------------------------------------------Transport.OnReplyFailed      = function( event_on_fail, reply, descr ){  var reply_failed_obj = Transport.GetFailedReply( reply, descr );    event_helper.Trigger( event_on_fail, reply_failed_obj );    console.log( descr );};//--------------------------------------------------------------------//--------------------------------------------------------------------Transport.GetFailedReply = function( error_code, error_descr ){    return {    'error_code' : error_code,    'error_descr': error_descr  };};//--------------------------------------------------------------------